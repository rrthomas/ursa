(print
  (let [sum]
    (seq
      (prop set (ref sum)
        (fn [l]
          (let [tot i]
            (seq
              (prop set (ref tot) 0)
              (prop set (ref i) 0)
              (loop
                (seq
                  (if (= i (prop length l))
                    (break tot))
                  (prop set (ref tot) (+ tot (prop get l i)))
                  (prop set (ref i) (+ i 1))))))))
      (sum [10 30 50 5 5]))))
