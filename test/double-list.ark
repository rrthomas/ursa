(print
  (let [double]
    (seq
      (prop set (ref double)
        (fn [l]
          (let [i]
            (seq
              (prop set (ref i) 0)
              (loop
                (seq
                  (if (= i (prop length l))
                    (return l))
                  (prop set l i (* (prop get l i) 2))
                  (prop set (ref i) (+ i 1))
                  ))))))
      (double [1 2 3]))))
